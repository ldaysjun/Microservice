// Code generated by protoc-gen-go. DO NOT EDIT.
// source: RecdTimService.proto

// 定义你的包名

package echo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimedTaskRequest struct {
	Start                int32    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int32    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Restall              int32    `protobuf:"varint,3,opt,name=restall,proto3" json:"restall,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimedTaskRequest) Reset()         { *m = TimedTaskRequest{} }
func (m *TimedTaskRequest) String() string { return proto.CompactTextString(m) }
func (*TimedTaskRequest) ProtoMessage()    {}
func (*TimedTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_295c14269c9257d7, []int{0}
}

func (m *TimedTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimedTaskRequest.Unmarshal(m, b)
}
func (m *TimedTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimedTaskRequest.Marshal(b, m, deterministic)
}
func (m *TimedTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimedTaskRequest.Merge(m, src)
}
func (m *TimedTaskRequest) XXX_Size() int {
	return xxx_messageInfo_TimedTaskRequest.Size(m)
}
func (m *TimedTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimedTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimedTaskRequest proto.InternalMessageInfo

func (m *TimedTaskRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *TimedTaskRequest) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *TimedTaskRequest) GetRestall() int32 {
	if m != nil {
		return m.Restall
	}
	return 0
}

type TimedTaskResponse struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	EreMsg               string   `protobuf:"bytes,2,opt,name=ere_msg,json=ereMsg,proto3" json:"ere_msg,omitempty"`
	ExpData              string   `protobuf:"bytes,3,opt,name=exp_data,json=expData,proto3" json:"exp_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimedTaskResponse) Reset()         { *m = TimedTaskResponse{} }
func (m *TimedTaskResponse) String() string { return proto.CompactTextString(m) }
func (*TimedTaskResponse) ProtoMessage()    {}
func (*TimedTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_295c14269c9257d7, []int{1}
}

func (m *TimedTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimedTaskResponse.Unmarshal(m, b)
}
func (m *TimedTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimedTaskResponse.Marshal(b, m, deterministic)
}
func (m *TimedTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimedTaskResponse.Merge(m, src)
}
func (m *TimedTaskResponse) XXX_Size() int {
	return xxx_messageInfo_TimedTaskResponse.Size(m)
}
func (m *TimedTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimedTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimedTaskResponse proto.InternalMessageInfo

func (m *TimedTaskResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *TimedTaskResponse) GetEreMsg() string {
	if m != nil {
		return m.EreMsg
	}
	return ""
}

func (m *TimedTaskResponse) GetExpData() string {
	if m != nil {
		return m.ExpData
	}
	return ""
}

func init() {
	proto.RegisterType((*TimedTaskRequest)(nil), "echo.TimedTaskRequest")
	proto.RegisterType((*TimedTaskResponse)(nil), "echo.TimedTaskResponse")
}

func init() { proto.RegisterFile("RecdTimService.proto", fileDescriptor_295c14269c9257d7) }

var fileDescriptor_295c14269c9257d7 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4e, 0xb4, 0x40,
	0x10, 0x85, 0xc3, 0xcc, 0x3f, 0xc3, 0x4f, 0x45, 0x0d, 0x56, 0x26, 0x33, 0x38, 0x71, 0x61, 0x58,
	0xb9, 0x82, 0x44, 0x8f, 0xa0, 0x5b, 0x13, 0x83, 0x2c, 0xdc, 0x91, 0x1e, 0xba, 0x82, 0x44, 0xa0,
	0xdb, 0xee, 0xd2, 0xcc, 0xda, 0x2b, 0x78, 0x19, 0xef, 0xe1, 0x15, 0x3c, 0x88, 0xa1, 0x51, 0xc6,
	0xe8, 0xca, 0x5d, 0xd5, 0xcb, 0xeb, 0xef, 0xf5, 0x2b, 0x58, 0x64, 0x54, 0xca, 0xbc, 0x6e, 0x6f,
	0xc8, 0x3c, 0xd5, 0x25, 0x25, 0xda, 0x28, 0x56, 0xf8, 0x8f, 0xca, 0x3b, 0xb5, 0x3e, 0xae, 0x94,
	0xaa, 0x1a, 0x4a, 0x85, 0xae, 0x53, 0xd1, 0x75, 0x8a, 0x05, 0xd7, 0xaa, 0xb3, 0x83, 0x27, 0xce,
	0x21, 0xcc, 0xeb, 0x96, 0x64, 0x2e, 0xec, 0x7d, 0x46, 0x0f, 0x8f, 0x64, 0x19, 0x17, 0x30, 0xb3,
	0x2c, 0x0c, 0x47, 0xde, 0x89, 0x77, 0x3a, 0xcb, 0x86, 0x05, 0x43, 0x98, 0x52, 0x27, 0xa3, 0x89,
	0xd3, 0xfa, 0x11, 0x23, 0xf0, 0x0d, 0x59, 0x16, 0x4d, 0x13, 0x4d, 0x9d, 0xfa, 0xb5, 0xc6, 0x1b,
	0x38, 0xfc, 0x46, 0xb5, 0x5a, 0x75, 0x96, 0xf0, 0x08, 0xfe, 0x93, 0x31, 0x45, 0xa9, 0x24, 0x7d,
	0x92, 0x7d, 0x32, 0xe6, 0x42, 0x49, 0xc2, 0x15, 0xf8, 0x64, 0xa8, 0x68, 0x6d, 0xe5, 0xf8, 0x41,
	0x36, 0x27, 0x43, 0x57, 0xb6, 0x72, 0x6f, 0xb6, 0xba, 0x90, 0x82, 0x85, 0xcb, 0x08, 0x32, 0x9f,
	0xb6, 0xfa, 0x52, 0xb0, 0x38, 0x7b, 0xf5, 0x00, 0x76, 0x95, 0xf1, 0x1a, 0x82, 0x31, 0x12, 0x97,
	0x49, 0x5f, 0x3d, 0xf9, 0xd9, 0x6c, 0xbd, 0xfa, 0xa5, 0x0f, 0x7f, 0x8b, 0xf1, 0xf9, 0xed, 0xfd,
	0x65, 0xb2, 0x87, 0x90, 0xf2, 0x08, 0xb9, 0x85, 0xfd, 0xd1, 0xd8, 0x0f, 0x7f, 0xa7, 0x2e, 0x1d,
	0x35, 0xc4, 0x83, 0x1d, 0xb5, 0x37, 0x6d, 0xe6, 0xee, 0xf6, 0xe7, 0x1f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x7a, 0xb6, 0x39, 0x60, 0xb7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TimServiceClient is the client API for TimService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimServiceClient interface {
	// 定义一个方法Echo,输入 TimedTaskRequest ,输出 TimedTaskResponse
	TimedTask(ctx context.Context, in *TimedTaskRequest, opts ...grpc.CallOption) (*TimedTaskResponse, error)
	TimedTaskTime(ctx context.Context, in *TimedTaskRequest, opts ...grpc.CallOption) (*TimedTaskResponse, error)
}

type timServiceClient struct {
	cc *grpc.ClientConn
}

func NewTimServiceClient(cc *grpc.ClientConn) TimServiceClient {
	return &timServiceClient{cc}
}

func (c *timServiceClient) TimedTask(ctx context.Context, in *TimedTaskRequest, opts ...grpc.CallOption) (*TimedTaskResponse, error) {
	out := new(TimedTaskResponse)
	err := c.cc.Invoke(ctx, "/echo.TimService/TimedTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *timServiceClient) TimedTaskTime(ctx context.Context, in *TimedTaskRequest, opts ...grpc.CallOption) (*TimedTaskResponse, error) {
	out := new(TimedTaskResponse)
	err := c.cc.Invoke(ctx, "/echo.TimService/TimedTaskTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TimServiceServer is the server API for TimService service.
type TimServiceServer interface {
	// 定义一个方法Echo,输入 TimedTaskRequest ,输出 TimedTaskResponse
	TimedTask(newcontext.Context, *TimedTaskRequest) (*TimedTaskResponse, error)
	TimedTaskTime(newcontext.Context, *TimedTaskRequest) (*TimedTaskResponse, error)
}

func RegisterTimServiceServer(s *grpc.Server, srv TimServiceServer) {
	s.RegisterService(&_TimService_serviceDesc, srv)
}

func _TimService_TimedTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimedTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimServiceServer).TimedTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.TimService/TimedTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimServiceServer).TimedTask(ctx, req.(*TimedTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TimService_TimedTaskTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimedTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimServiceServer).TimedTaskTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.TimService/TimedTaskTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimServiceServer).TimedTaskTime(ctx, req.(*TimedTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "echo.TimService",
	HandlerType: (*TimServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TimedTask",
			Handler:    _TimService_TimedTask_Handler,
		},
		{
			MethodName: "TimedTaskTime",
			Handler:    _TimService_TimedTaskTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "RecdTimService.proto",
}
